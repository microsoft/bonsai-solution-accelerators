{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "bonsaiWorkspaceId": {
            "type": "string"
        },
        "bonsaiContainerRegistry":
        {
            "type": "string"
        },
        "bonsaiTenantId":
        {
            "type": "string"
        },
        "script_extension_file": {
            "type": "string"
        } 
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetName": "default",
        "location": "[resourceGroup().location]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "networkInterfaceName": "[concat(variables('virtualMachineNameNoSpace'), '-ni')]",
        "networkSecurityGroupName":  "[concat(variables('virtualMachineNameNoSpace'), '-nsg')]",
        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "bastionName": "[concat(variables('virtualNetworkName'), '-bastion')]",
        "addressPrefixes": "10.1.0.0/24",
        "bastionAddressPrefixes": "10.1.1.0/27",
        "publicIpAddressName": "[concat(variables('virtualMachineNameNoSpace'), '-ip')]",
        "publicIpAddressType": "Static", 
        "publicIpAddressSku": "Standard",
        "virtualMachineNameNoSpace": "[replace(parameters('virtualMachineName'),' ','')]",
        "osDiskType": "StandardSSD_LRS",
        "virtualMachineSize": "Standard_D2_v4", 
        "patchMode": "AutomaticByOS",
        "workspaceId": "[parameters('bonsaiWorkspaceId')]",
        "bonsaiAcr": "[parameters('bonsaiContainerRegistry')]",
        "tenantId": "[parameters('bonsaiTenantId')]"
    },
    "resources": [
         {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]"
        },
        {
            "name": "[variables('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
            },
            "sku": {
                "name": "[variables('publicIpAddressSku')]"
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefixes')]",
                        "[variables('bastionAddressPrefixes')]"
                    ]                
                },
                "subnets": [
                                {
                                    "name": "[variables('subnetName')]",
                                    "properties": {
                                        "addressPrefix": "[variables('addressPrefixes')]",
                                         "privateEndpointNetworkPolicies": "Enabled",
                                         "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                },
                                {
                                    "name": "AzureBastionSubnet",
                                    "properties": {
                                        "addressPrefix": "[variables('bastionAddressPrefixes')]",
                                        "serviceEndpoints": [],
                                        "delegations": [],
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                        ]
            }
        },

        
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
    
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('virtualNetworkName'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('bastionAddressPrefixes')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },

        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('virtualNetworkName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('addressPrefixes')]",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[variables('bastionName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'AzureBastionSubnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'AzureBastionSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('virtualMachineNameNoSpace')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-06-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "21h1-pro",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineNameNoSpace')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true,
                        "patchSettings": {
                            "patchMode": "[variables('patchMode')]"
                        }
                    }
                },
                "licenseType": "Windows_Client",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-12-01",
            "name": "[concat(variables('virtualMachineNameNoSpace'),'/', 'InstallAnyLogicSA')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('virtualMachineNameNoSpace'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.7",
                "autoUpgradeMinorVersion":true,
                "settings": {
                    "fileUris": [
                        "[parameters('script_extension_file')]"
                    ],
                    "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File powershell_extension.ps1 ', subscription().subscriptionId, ' ', resourceGroup().name ,' ', variables('workspaceId'), ' ', variables('bonsaiAcr'), ' ', variables('tenantId'))]"
                }
            }
            }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}